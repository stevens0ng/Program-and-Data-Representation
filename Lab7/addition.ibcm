C004 000	jmp	start	skip around the variables
0000 001	dw	0	int x
0000 002	dw	0	int y
0000 003	dw	0	int z
1000 004 start  read    x       The input for int x 
4001 005	store   x       store accumulator for x 
1000 006	read    y       The input for int y
4002 007	store   y       store accumulator for y 
1000 008	read    z       The input for int z 
4003 009 	store	z	store accumulator for z (now that we've stored z, we've officially got 3 values from the user input and stored the value into 3 variables) 
3001 00A 	load	x	load accumulator x 
5002 00B	add	y	accumulate += y
5003 00C	add	z	accumulate += z
1800 00D	printH		Prints out the sum of x, y, z (adds the variables together, and prints out the sum) 
D013 00E	jmpe		If the sum of x, y, z is equal to 0, then just print out the three values: x, y, z and stop (The D opcode stands for jmpe and it occurs when accumulator == 0)  
C004 00F 	jmp	start   jmp means to jump/go to the address. In this case, if the sum is not equal to 0, then it starts over from int x on line 4 and begins the loop all over again (i.e. tries to get the 3 values, etc)   
0000 010                        line break
0000 011                        line break 
0000 012                        line break
3001 013	load	x	load accumulator x 
1800 014	print	x	Prints out int x
3002 015	load	y       load accumulator y 
1800 016	print	y	Prints out int y 
3003 017	load	z	load accumulator z 
1800 018	print	z	Prints out int z
0000 019	halt	        ends program
